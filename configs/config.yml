# pap_smear_project/configs/config.yml

# Path config
paths:
  # IMPORTANT: Update this path to your local data directory
  # This should be the parent directory containing 'HerlevData' and 'im_*' folders.
  raw_data_dir: "data/raw/"
  saved_models_dir: "saved_models/"
  tuner_dir: "kerastuner_dir"
  log_dir: "logs/" # For TensorBoard logs

# Data config
data:
  img_size: [224, 224]
  batch_size: 32
  seed: 42
  label_map:
    normal: 0
    abnormal: 1
  class_names: ["Normal", "Abnormal"]
  sipakmed_split:
    test_size: 0.15      # 15% for test set
    validation_size: 0.1765  # 15% of the original data (0.15 / 0.85)

# Train config
training:
  # Set to false to run KerasTuner hyperparameter search
  skip_tuning: true
  optimal_hyperparameters:
    learning_rate: 0.001
    dropout_rate: 0.30
    dense_units: 512
  # Epochs for different training stages
  initial_train_epochs: 25
  finetune_epochs: 20
  ensemble_train_epochs: 30
  # Callbacks
  early_stopping_patience: 7
  ensemble_early_stopping_patience: 10
  # Percentage of base model layers to unfreeze for fine-tuning
  finetune_unfreeze_percent: 0.3

# Model definitions
# This section defines all models to be trained and evaluated.
# The 'name' must match a key in tensorflow.keras.applications
models:
  - name: "VGG16"
    app_fn: "VGG16"
    preproc_fn: "vgg16"
  - name: "Xception"
    app_fn: "Xception"
    preproc_fn: "xception"
  - name: "EfficientNetB2"
    app_fn: "EfficientNetB2"
    preproc_fn: "efficientnet"
  - name: "InceptionResNetV2"
    app_fn: "InceptionResNetV2"
    preproc_fn: "inception_resnet_v2"
  - name: "DenseNet201"
    app_fn: "DenseNet201"
    preproc_fn: "densenet"
  - name: "NASNetMobile"
    app_fn: "NASNetMobile"
    preproc_fn: "nasnet"

# Variants
variants:
  - name: "Grayscale"
    is_grayscale: true
    use_color_pp: false
  - name: "Color"
    is_grayscale: false
    use_color_pp: true

# mrf cdn
paper_replication:
  seed: 42
  epochs: 75
  label_map:
    normal: 0
    abnormal: 1
  class_names: ["Normal", "Abnormal"]

  mrf_dcn:
    img_size: [224, 224]
    batch_size: 32
    learning_rate: 0.001
    early_stopping_patience: 15
    model_path: "saved_models/mrf_dcn_classifier.keras"
    
  unet:
    patch_size: 512
    batch_size: 8
    learning_rate: 0.0001
    early_stopping_patience: 10
    model_path: "saved_models/unet_segmenter.keras"
    # Paths for patch data generation and storage
    patch_dir: "data/patches/"
    patch_df_path: "data/patches/unet_patches.csv"
    patch_zip_path: "saved_models/patches.zip"


gradcam_analysis:
  # This should be the full filename of the model in the `saved_models` directory.
  model_filename: "InceptionResNetV2_Color_best_finetuned.keras"
  
  # The name of the final convolutional layer in the chosen model's backbone.
  # Common names:
  #   - VGG16: 'block5_conv3'
  #   - InceptionResNetV2: 'conv_7b'
  #   - Xception: 'block14_sepconv2_act'
  #   - EfficientNetB2: 'top_conv'
  last_conv_layer_name: "conv_7b"

  # The name of the backbone layer within the full model.
  # This usually matches the model name in lowercase.
  backbone_name: "inception_resnet_v2"
  
  # Preprocessing function name (must match a key in make_dataset.py)
  preproc_fn: "inception_resnet_v2"

  # Analysis parameters
  target_class_name: "abnormal" # can be 'normal' or 'abnormal'
  num_samples: 3              # how many images to visualize
  img_size: [224, 224]        # must match the model's expected input
  overlay_alpha: 0.6          # heatmap transparency